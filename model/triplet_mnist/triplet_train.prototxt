name: "triplet_train"

###############
### input   ###
###############

layer {
  name: 'data'
  type: 'Python'
  top: 'data'
  top: 'label'
  python_param {
    module: 'triplet_mnist'
    layer: 'DataLayer'
  }
}
###############
### data  1 ###
###############


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 20
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
       type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool2"
  top: "ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 500
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    name: "ip2_w"
    lr_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "feat"
  type: "InnerProduct"
  bottom: "ip2"
  top: "feat"
  param {
    name: "feat_w"
    lr_mult: 1
  }
  param {
    name: "feat_b"
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
       type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

############## l2 norm ###############
layer {
  name: "l2_norm_1"
  type: "Python"
  bottom: "feat"
  top: "l2_feat"
  python_param {
    module: "triplet_mnist"
    layer: "Norm2Layer"
  }
}


############## triplet select ###############
layer {
  name: "tripletselect"
  type: "Python"
  bottom: "l2_feat"
  bottom: "label"
  top: "anchor"
  top: "positive"
  top: "negative"
  python_param {
    module: "triplet_mnist"
    layer: "TripletSelectLayer"
  }
}

############## triplet loss ###############
layer {
  name: "tripletloss"
  type: "Python"
  bottom: "anchor"
  bottom: "positive"
  bottom: "negative"
  top: "loss"
  python_param {
    module: "triplet_mnist"
    layer: "TripletLossLayer2"
  }
  loss_weight: 1
}


